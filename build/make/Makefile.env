# before including this file, define:
# TOP relative to the including Makefile, e.g.
# 	TOP = $(abspath ../..)
# MODULE relative to TOP, e.g.
#   MODULE = src

BUILD = $(TOP)/build/make

include $(BUILD)/Makefile.config

SRCDIR = $(TOP)/$(MODULE)
BINDIR = $(TOP)/$(OS)-$(PLATFORM)-$(CONFIG)/bin
LIBDIR = $(TOP)/$(OS)-$(PLATFORM)-$(CONFIG)/lib
OBJDIR = $(TOP)/$(OS)-$(PLATFORM)-$(CONFIG)/obj/$(MODULE)

ifeq (Debug,$(CONFIG))
    CPPDEBUG = -g
endif

CPP = g++
CPPFLAGS = -std=c++11 $(CPPDEBUG) -I$(SRCDIR) -I$(TOP)/inc

#$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
makedirs:
	@ mkdir -p $(BINDIR) $(LIBDIR) $(OBJDIR) $(TESTDIR)

# Dependency generation:
# Add .d to Make's recognized suffixes.
SUFFIXES += .d

include $(wildcard $(OBJDIR)/*.d)

#This is the rule for creating the dependency files
$(OBJDIR)/%.d: $(SRCDIR)/%.cpp
	$(CPP) $(CPPFLAGS) -MM -MT '$(patsubst $(SRCDIR)/%.cpp,$(OBJDIR)/%.o,$<)' $< -MF $@

$(OBJDIR)/%.o: $(SRCDIR)/%.cpp $(OBJDIR)/%.d
	$(CPP) $(CPPFLAGS) -o $@ -c $<

.PRECIOUS:  $(OBJDIR)/%.d
